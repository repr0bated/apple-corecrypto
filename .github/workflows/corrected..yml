name: CoreCrypto Workflow

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  setup:
    name: Setup Environment
    runs-on: macos-latest
    outputs:
      checkout: ${{ steps.checkout.outputs }}
      xcode: ${{ steps.xcode.outputs }}
    steps:
      - name: Checkout repository
        id: checkout
        uses: actions/checkout@v4

      - name: Set up Xcode
        id: xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest

  build:
    needs: setup
    runs-on: macos-latest
    steps:
      - name: Use setup outputs
        run: echo "Setup completed"

      - name: List Available Simulators
        run: xcrun simctl list devices

      - name: Build CoreCrypto
        run: |
          cd apple-corecrypto
          xcodebuild clean build \
            -project corecrypto.xcodeproj \
            -scheme corecrypto \
            -sdk macosx \
            -configuration Debug \
            ARCHS="arm64 x86_64" \
            VALID_ARCHS="arm64 x86_64" \
            ONLY_ACTIVE_ARCH=NO \
            MACOSX_DEPLOYMENT_TARGET=13.0 \
            OTHER_CFLAGS="-fembed-bitcode"

      - name: Build Dynamic Library
        run: |
          cd apple-corecrypto
          xcodebuild clean build \
            -project corecrypto.xcodeproj \
            -scheme corecrypto_dylib \
            -sdk macosx \
            -configuration Debug \
            ARCHS="arm64 x86_64" \
            VALID_ARCHS="arm64 x86_64" \
            ONLY_ACTIVE_ARCH=NO \
            MACOSX_DEPLOYMENT_TARGET=13.0 \
            OTHER_CFLAGS="-fembed-bitcode"

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: corecrypto-build
          path: |
            apple-corecrypto/build
            apple-corecrypto/DerivedData
          retention-days: 5

  static-analysis:
    needs: setup
    runs-on: macos-latest
    steps:
      - name: Use setup outputs
        run: echo "Setup completed"

      - name: Run Xcode Analyze
        run: |
          cd apple-corecrypto
          xcodebuild clean analyze \
            -project corecrypto.xcodeproj \
            -scheme corecrypto \
            -sdk macosx \
            ARCHS="arm64 x86_64" \
            VALID_ARCHS="arm64 x86_64"
